AGENT:
  system_prompt: 'You are viby, an intelligent, thoughtful, and insightful Chinese-friendly
    AI assistant. You do more than passively respond — you proactively guide conversations,
    offer opinions, suggestions, and decisive answers. When users ask questions, reply
    concisely and helpfully, avoiding unnecessary verbosity.


    # Environment Info

    User OS: {os_info}

    User Shell: {shell_info}

    Current Directory: {current_dir}

    # Available Tools

    <tools>

    {tools_info}

    </tools>


    To use a tool, follow this format:

    {{"name": "tool_name", "arguments": {{"param1": "value1", "param2": "value2"}}}}

    You may call different tools multiple times until the user''s problem is fully
    solved.

    For example, if the user asks about the current directory project, first run pwd,
    then ls, and if there is a README or other important file, read it before giving
    a complete answer.

    You have the ability to operate the computer like a user, including accessing
    websites and resources (e.g., use curl to check the weather).You can also search
    for available tools, and the tools retrieved are all available.Always strive to
    solve the user''s needs efficiently and thoroughly.'
CHAT:
  input_prompt: '|> '
CONFIG_WIZARD:
  PASS_PROMPT_HINT: (type 'pass' to skip)
  autocompact_header: '--- Auto Message Compaction Configuration ---'
  autocompact_threshold_prompt: Compaction threshold (ratio of max_tokens to trigger
    compaction, 0.1-0.9)
  checking_chinese: Checking if terminal supports Chinese...
  default_model_header: '--- Default Model Configuration ---'
  embedding_model_header: '--- Embedding Model Configuration ---'
  embedding_model_name_prompt: Embedding Model Name
  enable_autocompact_prompt: Enable automatic message compaction
  enable_mcp_prompt: Enable MCP tools
  enable_tool_search_prompt: Enable MCP tool search feature (intelligently select
    relevant tools based on query)
  enable_yolo_mode_prompt: Enable YOLO mode (auto-execute safe shell commands)
  fast_model_header: '--- Fast Model Configuration (Optional) ---'
  invalid_decimal: Please enter a valid decimal number!
  invalid_integer: Please enter a valid integer!
  invalid_number: Please enter a valid number!
  invalid_top_p: Invalid top_p value, set to None!
  keep_exchanges_prompt: Number of recent exchanges to keep uncompacted (1-5)
  keep_exchanges_range: Keep exchanges must be between 1 and 5!
  mcp_config_info: 'MCP configuration folder: {0}'
  model_max_tokens_prompt: Set maximum tokens for {model_name} model (20480)
  model_specific_key_prompt: API Key for {model_name} (optional, uses default if blank)
  model_specific_url_prompt: API URL for {model_name} (optional, uses default if blank)
  model_temperature_prompt: Set temperature for {model_name} model (0.0-1.0)
  model_top_p_prompt: Set top_p value for {model_name} model (0.0-1.0, leave blank
    to disable)
  'no': 'No'
  number_range_error: Please enter a number between 1-{0}!
  selected_language: Selected English interface
  temperature_range: Temperature must be between 0.0 and 1.0!
  think_model_header: '--- Think Model Configuration (Optional) ---'
  threshold_range: Threshold must be between 0.1 and 0.9!
  tokens_positive: Token count must be greater than 0!
  top_p_range: top_p must be between 0.0 and 1.0, set to None!
  url_error: URL must start with http:// or https://!
  'yes': 'Yes'
GENERAL:
  app_description: viby - A versatile command-line tool for interacting with large
    language models
  chat_help: Start an interactive chat session with the model
  config_help: Launch interactive configuration wizard
  fast_help: Use the fast model for quicker responses (if configured)
  help_text: show this help message and exit
  llm_empty_response: Model did not return any content, please try again or check
    your prompt.
  model_not_specified_error: 'Error: No model specified. You must explicitly set a
    model in the configuration.'
  prompt_help: Prompt content to send to the model
  think_help: Use the think model for deeper analysis (if configured)
  token_usage_completion: 'Output Tokens: {0}'
  token_usage_duration: 'Response Time: {0}'
  token_usage_not_available: Token usage information not available
  token_usage_prompt: 'Input Tokens: {0}'
  token_usage_title: 'Token Usage Statistics:'
  token_usage_total: 'Total Tokens: {0}'
  tokens_help: Display token usage information
  version_help: Show program's version number and exit
HISTORY:
  clear_cancelled: Clear operation cancelled.
  clear_failed: Failed to clear history records.
  clear_successful: Successfully cleared {0} history records
  clearing_history: Clearing history records...
  command: Command
  command_help: Manage interaction history records
  compaction_system_prompt: You are a chat history compression assistant. Your task
    is to compress the provided conversation history into a smaller token count while
    preserving all important information and context. Your goal is to reduce token
    count while maintaining key contextual elements. The summary should be coherent,
    readable, and include all relevant information, but with more concise wording.
    Do not add any information that was not present in the original conversation.
  compaction_user_prompt: 'Please compress the following conversation history, preserving
    important information but reducing token count: {0}'
  compressed_summary_prefix: 'Here''s a compressed summary of the previous conversation:'
  confirm_clear_all: Are you sure you want to clear all history records?
  content: Content
  create_directory_failed: 'Failed to create directory: {0}'
  directory: Directory
  exit_code: Exit code
  export_cancelled: Export cancelled.
  export_failed: Failed to export history records.
  export_path_required: Export file path is required.
  export_successful: 'History records successfully exported to {0}, format: {1}, type:
    {2}'
  exporting_history: Exporting history records...
  file_exists_overwrite: File {0} already exists. Overwrite?
  file_help: Path to export file
  force_help: Force clear without confirmation
  format_help: Export format (json, csv, yaml)
  limit_help: Number of records to display
  no_history: No history records found.
  no_matching_history: No matching history for '{0}'.
  no_shell_history: No shell command history found.
  query_help: Search keyword
  recent_history: Recent interaction history
  recent_shell_history: Recent shell command history
  response: Response
  search_results: 'Search results: ''{0}'''
  search_term_required: A search keyword is required.
  timestamp: Time
  type: Type
  type_help: Type of history to export (interactions, shell)
MCP:
  error_message: 'Error executing tool: {0}'
  executing_tool: '## Executing tool call'
  execution_error: '

    ❌ Error executing tool: {0}'
  parsing_error: '❌ Error parsing LLM response: {0}'
  shell_tool_description: Execute a shell command on the user's system
  shell_tool_param_command: The shell command to execute
  tool_retrieval_description: Search for most relevant MCP tools based on user query,
    returning tool names, descriptions, parameters, and similarity scores
  tool_retrieval_param_query: Search query text describing needed tool functionality
    or user needs
  tool_retrieval_param_top_k: Number of most relevant tools to return, default is
    5
  tools_error: '

    Error: Failed to get MCP tools: {0}'
SHELL:
  choice_prompt: '[r]run, [e]edit, [y]copy, [q]quit (default: run): '
  edit_prompt: 'Edit command (original: {0}):

    > '
SHORTCUTS:
  action_instructions: 'Required action: source {0} or restart terminal'
  auto_detect_failed: Unable to auto-detect shell type, will try common shell types
  auto_detect_shell: Auto-detected shell type
  command_help: Install terminal keyboard shortcuts (Ctrl+Q activates Viby), auto-detects
    shell type
  install_error: 'Failed to install shortcuts: {0}'
  install_exists: Shortcuts already exist in {0}
  install_success: Shortcuts successfully installed to {0}
  shell_not_supported: 'Unsupported shell type: {0}'
TOOLS:
  available_tools_table_title: Available MCP Tools
  command_help: Manage tools related commands
  connect_server_failed: Failed to connect to embedding server
  description_column: Description
  description_unavailable: '[Description Unavailable]'
  download_help: Download embedding model
  embed_server_start_failed: Failed to start embedding model server
  embed_server_status_check_failed: Failed to check embedding model server status
  embed_server_stop_failed: Failed to stop embedding model server
  embed_server_title: Embedding Model Service
  embed_start_help: Start the embedding model service
  embed_status_help: Check the status of the embedding model service
  embed_stop_help: Stop the embedding model service
  embed_subcommand_help: Embedding vector management subcommands
  embed_update_help: Update embeddings for MCP tools
  embedding_model_load_failed: Failed to load embedding model, cannot generate embeddings
  embedding_server_not_running: Embedding model server is not running, check if the
    model is downloaded
  embedding_server_not_running_cannot_update: Embedding model server is not running,
    cannot update tools
  embeddings_update_failed: Embedding update failed
  embeddings_update_title: Embedding Update
  listing_tools: Listing available tools
  mcp_not_enabled: MCP functionality is not enabled, unable to retrieve tools
  model_download_error: Error downloading model
  model_load_complete: Model loading complete
  model_load_empty: Model loading failed, returned empty object
  model_load_failed: Failed to load model
  no_cached_tools: No cached tool information found
  no_embeddings: No tool embeddings available, please call update_tool_embeddings
    first
  no_mcp_tools: No MCP tools available
  param_count_column: Parameters
  query_cannot_be_empty: Query text cannot be empty
  required_no: 'No'
  required_yes: 'Yes'
  search_timeout: Search request timed out
  server_already_running: Embedding model server is already running
  server_column: Server
  server_crashed: 'Failed to start embedding model server: Server process exi'
  server_not_running: Embedding model server is not running
  server_shutting_down: Server is shutting down...
  server_start_timeout: 'Failed to start embedding model server: service not responding'
  start_updating_embeddings: Starting to update embeddings for {tool_count} MCP tools...
  suggest_update_embeddings: Please use 'yb tools embed' command first to update tool
    embeddings
  tool_name_column: Tool Name
  tools_list_title: Tools List
  tools_listing_failed: Failed to list tools
  update_embeddings_help: Update MCP tool embeddings
  update_tools_failed: Failed to update tools
  updated_tools_table_title: Updated Tools List
  updating_embeddings: Updating all tool embeddings
